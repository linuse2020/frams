<?php

use Drupal\Core\Form\FormBase;
use Drupal\user\Entity\User;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Entity;
use \Drupal\node\Entity\Node;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpKernel\Profiler;
use Drupal\Core\Routing;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\views\ViewExecutable;

/**
 * @param \Drupal\Core\Entity\EntityInterface $user
 */


function frams_profile_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {	
	global $user;
	$current_user = \Drupal::currentUser();
  $uid = $current_user->id();
  $roles = $current_user->getRoles();
  $form_display = $form_state->get('form_display')->getMode();
	if ($form_id == 'user_register_form') {
		$form['actions']['submit']['#submit'][] = 'frams_user_register_submit';
    $form['actions']['submit']['#value'] = 'Sign Up';
	}
	elseif ($form_id == 'node_application_claimant_form' &&  in_array( 'claimant', (array) $roles )) {
    $node_frc = $frc = $term_settlement = $term_village = $term_taluk = $field_taluk = $field_sdlc = $field_dlc = $node_dlc = $field_slc = $field_district = NULL;   
    $activeProfile = \Drupal::getContainer()
      ->get('entity_type.manager')
      ->getStorage('profile')
      ->loadByUser(User::load($uid), 'claimant');

  $field_frc = $activeProfile->field_frc[0]->getValue();
  $field_district = $activeProfile->field_district[0]->getValue();   
  if(isset($field_frc['target_id'])) {
    $node_frc = Node::load($field_frc['target_id']);   
  }
  $field_settlement = $activeProfile->field_settlement[0]->getValue();
  if(!empty($node_frc->get('field_frc_sdlc')->getValue('target_id'))) {
    $field_sdlc = $node_frc->get('field_frc_sdlc')->getValue('target_id');
  }
  $node_sdlc = Node::load($field_sdlc[0]['target_id']);
  if(!empty($node_sdlc->get('field_dlc')->getValue('target_id'))) {
    $field_dlc = $node_sdlc->get('field_dlc')->getValue('target_id');
  }
  $node_dlc = Node::load($field_dlc[0]['target_id']);
  if(!empty($node_dlc->get('field_slc')->getValue('target_id'))) {
    $field_slc = $node_dlc->get('field_slc')->getValue('target_id');
  }
  if(!empty($node_frc->get('field_frc_village')->get('0')->get('target_id')->getValue())) {
    $term_village = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($node_frc->get('field_frc_village')->get('0')->get('target_id')->getValue());
  }
  if(!empty($term_village)) {
    $field_taluk = $term_village->get('field_taluk')->getValue();
  }

  if(!empty($field_taluk[0]['target_id'])) {
    $term_taluk = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($field_taluk[0]['target_id']);
  }    

  $node_teo  = \Drupal::entityQuery('node')
      ->condition('status', 1)
      ->condition('type', 'tribal_extension_offices')
      ->condition('field_teo_frc', $field_frc['target_id'])
      ->execute();
    
  $teo_nid = NULL;
  if(!empty($node_teo)) {
    foreach ($node_teo as $key => $tvalue) {
      $teo_nid = $tvalue;
    }
  }
  $teo = Node::load($teo_nid);
  $field_tdo = NULL;    
  if(!empty($teo) && !empty($teo->get('field_tdo')->getValue('target_id'))) {      
    $field_tdo = $teo->get('field_tdo')->getValue('target_id'); 
  }
  $node_promoter  = \Drupal::entityQuery('node')
      ->condition('status', 1)
      ->condition('type', 'promoters')
      ->condition('field_frc', $field_frc['target_id'])
      ->execute();   
  $promoter_nid = NULL;    
  foreach ($node_promoter as $key => $pvalue) {
    $promoter_nid = $pvalue;
  }
 /* $form['revision_information']['#access'] = FALSE;*/
  $form['field_claimant_district']['widget']['#default_value'] = !empty($field_district['target_id']) ? $field_district['target_id'] : '';
  $form['field_claimant_constituency']['widget']['#default_value'] = !empty($node_frc->get('field_frc_constituency')->get('0')->get('target_id')->getValue()) ? $node_frc->get('field_frc_constituency')->get('0')->get('target_id')->getValue() : ' ';
  $form['field_claimant_taluk']['widget']['#default_value'] = !empty($field_taluk[0]['target_id']) ? $field_taluk[0]['target_id'] : '';
  $form['field_claimant_panchayat']['widget']['#default_value'] =  !empty($node_frc->get('field_frc_panchayat')->get('0')->get('target_id')->getValue()) ? $node_frc->get('field_frc_panchayat')->get('0')->get('target_id')->getValue() : '';
  $form['field_claimant_village']['widget']['#default_value'] =  !empty($node_frc->get('field_frc_village')->get('0')->get('target_id')->getValue()) ? $node_frc->get('field_frc_village')->get('0')->get('target_id')->getValue() : '';
  $form['field_claimant_range']['widget']['#default_value'] = !empty($node_frc->get('field_frc_forest_range')->get('0')->get('target_id')->getValue()) ? $node_frc->get('field_frc_forest_range')->get('0')->get('target_id')->getValue() : '';
  $form['field_claimant_sdlc']['widget']['#default_value'] = !empty($field_sdlc[0]['target_id']) ? $field_sdlc[0]['target_id'] : '';
  $form['field_claimant_dlc']['widget']['#default_value'] = !empty($field_dlc[0]['target_id']) ? $field_dlc[0]['target_id'] : '';
  $form['field_claimant_slc']['widget']['#default_value'] = !empty($field_slc[0]['target_id']) ? $field_slc[0]['target_id'] : '';
  $form['field_claimant_frc']['widget']['#default_value'] = !empty($field_frc['target_id']) ? $field_frc['target_id'] : '';
  $form['field_claimant_settlement']['widget']['#default_value'] = !empty($field_settlement['target_id']) ?  $field_settlement['target_id'] : '';
  $form['field_claimant_teo']['widget']['#default_value'] =  !empty($teo_nid) ? $teo_nid : '';
  $form['field_claimant_tdo']['widget']['#default_value'] =  !empty($field_tdo[0]['target_id']) ? $field_tdo[0]['target_id'] : '';
  $form['field_claimant_promoter']['widget']['#default_value'] =  !empty($promoter_nid) ?  $promoter_nid : '';
    if ( array_key_exists('moderation_state', $form) ) {
      $node = $form_state->getFormObject()->getEntity();
      $moderationState = $node->get('moderation_state')->getValue('state');
    /*if (isset($moderationState[0]['value'])) {
     $form['moderation_state']['widget'][0]['state']['#default_value'] = $moderationState[0]['value'];
     }*/
    }
  }
}

/**
 * Custom submit handler for user registration.
 */
function frams_user_register_submit(&$form, FormStateInterface $form_state) {
}



/**
 * Custom function check Aadhar card No.
 */

function _isAadharValid($num) {
    settype($num, "string");
    $expectedDigit = substr($num, -1);
    $actualDigit = CheckSumAadharDigit(substr($num, 0, -1));
    return ($expectedDigit == $actualDigit) ? $expectedDigit == $actualDigit : 0;
}

function CheckSumAadharDigit($partial) {
  $dihedral = array(
    array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9),
    array(1, 2, 3, 4, 0, 6, 7, 8, 9, 5),
    array(2, 3, 4, 0, 1, 7, 8, 9, 5, 6),
    array(3, 4, 0, 1, 2, 8, 9, 5, 6, 7),
    array(4, 0, 1, 2, 3, 9, 5, 6, 7, 8),
    array(5, 9, 8, 7, 6, 0, 4, 3, 2, 1),
    array(6, 5, 9, 8, 7, 1, 0, 4, 3, 2),
    array(7, 6, 5, 9, 8, 2, 1, 0, 4, 3),
    array(8, 7, 6, 5, 9, 3, 2, 1, 0, 4),
    array(9, 8, 7, 6, 5, 4, 3, 2, 1, 0)
  );
  $permutation = array(
    array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9),
    array(1, 5, 7, 6, 2, 8, 3, 0, 9, 4),
    array(5, 8, 0, 3, 7, 9, 6, 1, 4, 2),
    array(8, 9, 1, 6, 0, 4, 3, 5, 2, 7),
    array(9, 4, 5, 3, 1, 2, 6, 8, 7, 0),
    array(4, 2, 8, 6, 5, 7, 3, 9, 0, 1),
    array(2, 7, 9, 3, 8, 0, 6, 4, 1, 5),
    array(7, 0, 4, 6, 9, 1, 3, 2, 5, 8)
  );

  $inverse = array(0, 4, 3, 2, 1, 5, 6, 7, 8, 9);
  settype($partial, "string");
  $partial = strrev($partial);
  $digitIndex = 0;
  for ($i = 0; $i < strlen($partial); $i++) {
      $digitIndex = $dihedral[$digitIndex][$permutation[($i + 1) % 8][$partial[$i]]];
  }
  return $inverse[$digitIndex];
}