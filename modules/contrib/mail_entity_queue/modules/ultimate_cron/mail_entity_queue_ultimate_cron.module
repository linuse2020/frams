<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\ultimate_cron\CronJobInterface;
use Drupal\ultimate_cron\Entity\CronJob;

/**
 * Callback for mail_entity_queue_process__QUEUENAME cronjobs.
 *
 * @param CronJobInterface $job
 *   The job being run.
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 */
function mail_entity_queue_ultimate_cron_queue_cronjob_process(CronJobInterface $job) {
  $queue_name = substr($job->id(), strlen('mail_entity_queue_process__'));

  /** @var \Drupal\mail_entity_queue\Entity\MailEntityQueueInterface $queue */
  if (($queue = \Drupal::entityTypeManager()->getStorage('mail_entity_queue')->load($queue_name)) !== NULL) {
    $queue->getQueueProcessor()->processQueue($queue->id());
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function mail_entity_queue_ultimate_cron_mail_entity_queue_insert(EntityInterface $entity) {
  /** @var \Drupal\mail_entity_queue\Entity\MailEntityQueueInterface $entity */
  $job_name = 'mail_entity_queue_process__' . $entity->id();
  $values = [
    'id' => $job_name,
    'title' => t('Process mail queue: @queue', ['@queue' => $entity->label()]),
    'callback' => 'mail_entity_queue_ultimate_cron_queue_cronjob_process',
    'module' => 'mail_entity_queue_ultimate_cron',
    'scheduler' => [
      'id' => 'crontab',
      'configuration' => ['rules' => ['*/1 * * * *']],
    ],
  ];

  /** @var \Drupal\ultimate_cron\Entity\CronJob $job */
  $job = CronJob::load($job_name);
  if (empty($job)) {
    $job = CronJob::create($values);
    $job->save();
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function mail_entity_queue_ultimate_cron_mail_entity_queue_delete(EntityInterface $entity) {
  /** @var \Drupal\mail_entity_queue\Entity\MailEntityQueueInterface $entity */
  $job_name = 'mail_entity_queue_process__' . $entity->id();

  /** @var \Drupal\ultimate_cron\Entity\CronJob $job */
  $job = CronJob::load($job_name);
  if (!empty($job)) {
    $job->delete();
  }
}
